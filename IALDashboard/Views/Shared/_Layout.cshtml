@{
    var controllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();

    controllerName = System.Text.RegularExpressions.Regex.Replace(controllerName, "[A-Z]", " $0");

    var actionName = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();

    actionName = System.Text.RegularExpressions.Regex.Replace(actionName, "[A-Z]", " $0");


    if ((ViewBag.actionName) != null)
    {
        actionName = ViewBag.actionName;
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - IFAD Autos Ltd</title>
    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">

    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/dtcss")
    @Scripts.Render("~/bundles/modernizr")
   
</head>
<body class="hold-transition sidebar-mini">
    <div class="wrapper">
        <!---  After wrapper in layout -->
        <!-- Preloader -->
        <div class="preloader flex-column justify-content-center align-items-center" style="background: rgba(0,0,0,0.3)">
            <i class="fa fa-spinner fa-spin fa-5x"></i>
            @*<img class="animation__shake" src="~/Content/images/ifad-wave_for_loading.gif" alt="IFAD" height="60" width="60">*@
        </div>

        @Html.Partial("_Navbar")
        @Html.Partial("_Aside")

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">

            <!-- Content Header (Page header) 
            <section class="content-header">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-sm-6">
                            <h1>@actionName</h1>
                        </div>
                        @*<div class="col-sm-6">
                            <ol class="breadcrumb float-sm-right">
                                <li class="breadcrumb-item"><a href="#">@controllerName</a></li>
                                <li class="breadcrumb-item active">@actionName</li>
                            </ol>
                        </div>*@
                    </div>
                </div>
            </section>
                -->
            

            <!-- Main content -->
            <section class="content">
                <br/>
                @RenderBody()
            </section>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->
        @Html.Partial("_Footer")

    </div>


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/datatable")
    @RenderSection("scripts", required: false)

    <!-- Page specific script -->
    <script type="text/javascript">
        function hidePreloader() {

            $(".preloader").css('height', 0);
          

            $(".preloader i").css('display', 'none');
        }

        var tableToExcel = (function () {
            var uri = 'data:application/vnd.ms-excel;base64,'
                , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
            return function (table, name) {
                if (!table.nodeType) table = document.getElementsByClassName(table)
                var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
                window.location.href = uri + base64(format(template, ctx))
            }
        })()

        //paging: false,
           // ordering: false,
               // info: false,


        // To split the Number with Commmas

        Commas = function (input) {
            // If the regex doesn't match, `replace` returns the string unmodified
            return (input.toString()).replace(
                // Each parentheses group (or 'capture') in this regex becomes an argument
                // to the function; in this case, every argument after 'match'
                /^([-+]?)(0?)(\d+)(.?)(\d+)$/g, function (match, sign, zeros, before, decimal, after) {

                    // Less obtrusive than adding 'reverse' method on all strings
                    var reverseString = function (string) { return string.split('').reverse().join(''); };

                    // Insert commas every three characters from the right
                    var insertCommas = function (string) {

                        // Reverse, because it's easier to do things from the left
                        var reversed = reverseString(string);

                        // Add commas every three characters
                        var reversedWithCommas = reversed.match(/.{1,3}/g).join(',');

                        // Reverse again (back to normal)
                        return reverseString(reversedWithCommas);
                    };

                    // If there was no decimal, the last capture grabs the final digit, so
                    // we have to put it back together with the 'before' substring
                    return sign + (decimal ? insertCommas(before) + decimal + after : insertCommas(before + after));
                }
            );
        };



    </script>

    <script>

        $(document).ready(function () {
            $('#example').DataTable({
                fixedHeader: true,
                responsive: true,
                paging: false,
                ordering: false,
                info: false,
            });

            $("body").on("click", ".myPreLoader", function () {

                $('.preloader').removeAttr("style");
                $('.preloader').css("background",'rgba(0,0,0,0.3)');
                $('.preloader i').removeAttr("style");

            })
            @*Preloader ends here*@

            $(function () {
                var url = window.location;
                console.log(url);
                // for single sidebar menu
                if (url.pathname != "/") {


                    $('ul.nav-sidebar a').filter(function () {
                        return this.href == url;
                    }).addClass('active');

                    // for sidebar menu and treeview
                    $('ul.nav-treeview a').filter(function () {
                        return this.href == url;
                    }).parentsUntil(".nav-sidebar > .nav-treeview")
                        .css({ 'display': 'block' })
                        .addClass('menu-open').prev('a')
                        .addClass('active');
                }
                });

            @*Active Nav ends here*@


        });

      

        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

            $("body").on("click", "#profile_pic", function () {
                $("#ProfilePic").modal("show");
            });
        });


        function preview() {
            frame.src = URL.createObjectURL(event.target.files[0]);
        }
        function clearImage() {
            document.getElementById('formFile').value = null;
            frame.src = "";
        }

        


    </script>

</body>
</html>
